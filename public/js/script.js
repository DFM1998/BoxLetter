function buttonDirectionClicked(t){$(".switch-button-checkbox").click(),document.getElementById("location_"+t).scrollIntoView({behavior:"smooth",block:"center",inline:"center"}),$(".list_location_close").removeClass("activeAddress"),$("#location_"+t+" .list_location_close").addClass("activeAddress")}const horraire=["07:30","08:00","08:30","09:00","09:30","10:00","10:30","11:00","11:30","12:00","12:30","13:00","13:30","14:00","14:30","15:00","15:30","16:00","16:30","17:00","17:30","18:00","18:30","19:00"];let mydata=JSON.parse(data),curMap=new lux.Map({target:"map1",bgLayer:"basemap_2015_global",bgLayerStyle:mydata,zoom:14,position:[76825,75133]});function displayMyPosition(t,o){curMap.showMarker({position:[t,o],positionSrs:4326,positioning:"center-center",iconURL:"./images/myPosition.svg",click:!1});var e=ol.proj.fromLonLat([t,o]);curMap.getView().animate({center:e,duration:1e3,zoom:15})}function moveView(t){var o=ol.proj.fromLonLat([parseFloat(t.split(",")[0]),parseFloat(t.split(",")[1])]);console.log(curMap),curMap.getView().animate({center:o,duration:2e3,zoom:18})}function clearMap(){curMap.getOverlays().clear()}function displayPins(t,o,e,i){clearMap(),$.getJSON("api/boxletter/"+t,(function(t){for(let l=0;l<t.length;l++){const c=t[l];let a=c.coordinates.split(",");const s=c.idBoxLetter,r=c.pickUpTime,d=c.street,p=c.city,u=c.postal;if(void 0!==o){let c=horraire.indexOf(o),p=horraire.length;void 0!==e&&(p=horraire.indexOf(e)+1);const h=t[l];for(let t=c;t<p;t++)if(null==i){if(h.pickUpTime==horraire[t]){var n=`<div>\n                            <p>Adresse</p>\n                            <p>${d} L-${u}</p>\n                            <p>Pickup time</p>\n                            <p>${r}</p>\n                            <p>Distance</p>\n                            <p>${calcCrow(h.normalCoordinates.split(",")[1],h.normalCoordinates.split(",")[0],latitude,longitude).toFixed(2)} km</p>\n                            <button class="directionButton" id="boxLetter_${s}" onclick="buttonDirectionClicked(${s})">Direction</button></div>\n                        </div>`;curMap.showMarker({position:[parseFloat(a[0]),parseFloat(a[1])],positioning:"center-center",iconURL:"./images/pin.svg",click:!0,html:n,style:function(t,o){return iconStyle.getImage().setScale(1/Math.pow(o,1/3)),iconStyle}})}}else if(h.pickUpTime==horraire[t]&&h.pickUpTime==horraire[t]&&parseFloat(calcCrow(h.normalCoordinates.split(",")[1],h.normalCoordinates.split(",")[0],latitude,longitude).toFixed(2))<=parseInt(i)){n=`<div>\n                                    <p>Adresse</p>\n                                    <p>${d} L-${u}</p>\n                                    <p>Pickup time</p>\n                                    <p>${r}</p>\n                                    <p>Distance</p>\n                                    <p>${calcCrow(h.normalCoordinates.split(",")[1],h.normalCoordinates.split(",")[0],latitude,longitude).toFixed(2)} km</p>\n                                    <button class="directionButton" id="boxLetter_${s}" onclick="buttonDirectionClicked(${s})">Direction</button></div>\n                                </div>`;curMap.showMarker({position:[parseFloat(a[0]),parseFloat(a[1])],positioning:"center-center",iconURL:"./images/pin.svg",click:!0,html:n,style:function(t,o){return iconStyle.getImage().setScale(1/Math.pow(o,1/3)),iconStyle}})}}else{n=`<div class='popupContent'>\n                                <div class='popupContent1'>\n                                    <p>Adresse</p>\n                                    <p>${d}</p>\n                                    <p>${p} L-${u}</p>\n                                </div>\n                                <div class='popupContent2'>\n                                    <p>Pickup time</p>\n                                    <p>${r}</p>\n                                </div>\n                                <div class='popupContent3'>\n                                    <p>Distance</p>\n                                    <p>${calcCrow(c.normalCoordinates.split(",")[1],c.normalCoordinates.split(",")[0],latitude,longitude).toFixed(2)} km</p>\n                                </div>\n                                <div class='popupContent4'>\n                                    <button class="directionButton" id="boxLetter_${s}" onclick="buttonDirectionClicked(${s})">Direction</button>\n                                </div>\n                            </div>`;curMap.showMarker({position:[parseFloat(a[0]),parseFloat(a[1])],positioning:"center-center",iconURL:"./images/pin.svg",click:!0,html:n,style:function(t,o){return iconStyle.getImage().setScale(1/Math.pow(o,1/3)),iconStyle}})}}$(".ol-overlay-container").click((function(){console.log(curMap)}))}))}let longitude=6.130578,latitude=49.611205,fontColorSwitcher=!0;const handleShowMap=()=>{$("main").toggleClass("mobileViewShow"),$("main").toggleClass("mobileViewHide"),fontColorSwitcher?($(".switch-button-label-span").css("color","white"),$(".switch-button").before().css("color","#002641"),fontColorSwitcher=!1):($(".switch-button-label-span").css("color","#002641"),$(".switch-button").before().css("color","white"),fontColorSwitcher=!0),console.log(fontColorSwitcher)};$(document).on("click",".directionButton",handleShowMap),$(document).ready((function(){$(".switch-button-label-span").css("color","#002641"),$(".switch-button").before().css("color","white"),$(".switch-button-checkbox").prop("checked",!0),$(".languageButton").click((function(){switchLanguage(this.id),"en"==this.id&&localStorage.clear(),location.reload(!0)}))})),$(window).click((t=>{setTimeout((()=>{$(".filterFunctions").hide()}),1e3)})),$(".filterFunctions").click((t=>t.stopPropagation())),$(".showHideFilter").click((function(){$(".filterFunctions").show()}));let lang="";if(null!=localStorage.getItem("language")){const t=localStorage.getItem("language");$("#"+t).html("EN"),$("#en").html(t.toUpperCase()),$("#"+t).attr("id","en"),switchLanguage(t)}else switchLanguage("en");function switchLanguage(t){$.ajax({url:"js/json/"+t+".json",dataType:"json",async:!1}).done((function(o){lang=o,localStorage.setItem("language",t),$("#emptiedYet").html(lang.emptiedYet),$("#time").html(lang.time),$("#distance").html(lang.distance),$("#from").html(lang.from),$("#to").html(lang.to),$("#sortBy").html(lang.sortBy),$("#boxLettersFound").html(lang.boxLettersFound)}))}let sorting="asc";function calcCrow(t,o,e,i){var n=toRad(e-t),l=toRad(i-o),c=(t=toRad(t),e=toRad(e),Math.sin(n/2)*Math.sin(n/2)+Math.sin(l/2)*Math.sin(l/2)*Math.cos(t)*Math.cos(e));return 6371*(2*Math.atan2(Math.sqrt(c),Math.sqrt(1-c)))}function toRad(t){return t*Math.PI/180}$("#sortByPickUp").click((function(){$(this).css("background-color","#E1E1E1"),$("#sortByDistance").css("background-color","");let t=$("#startTime").val(),o=$("#endTime").val(),e=$(".sliderDistance").val(),i="pickUpTime",n=$("#inputFieldSearch").val();null!==t&&(t="07:30",o="19:00"),null!==o&&(o="19:00"),""!==n?$.getJSON("https://apiv3.geoportail.lu/geocode/search?queryString="+n,(function(n){showLocationList(n.results[0].AddressDetails.locality,t,o,e,i,sorting)})):showLocationList("Luxembourg",t,o,e,i,sorting),sorting="asc"==sorting?"desc":"asc"})),$("#sortByDistance").click((function(){$(this).css("background-color","#E1E1E1"),$("#sortByPickUp").css("background-color","");let t=$("#startTime").val(),o=$("#endTime").val(),e=$(".sliderDistance").val(),i="distance",n=$("#inputFieldSearch").val();null!==t&&(t="07:30",o="19:00"),null!==o&&(o="19:00"),""!==n?$.getJSON("https://apiv3.geoportail.lu/geocode/search?queryString="+n,(function(n){showLocationList(n.results[0].AddressDetails.locality,t,o,e,i,sorting)})):showLocationList("Luxembourg",t,o,e,i,sorting),sorting="asc"==sorting?"desc":"asc"})),checkInputSearch(),$(document).ready((function(){let t="<option selected disabled>??:??</option>";horraire.forEach((o=>{t+="<option>"+o+"</option>"})),$("#startTime").html(t)})),$("#startTime").change((function(){let t=this.value,o="<option selected disabled>??:??</option>";for(let e=horraire.indexOf(t);e<horraire.length;e++){o+="<option>"+horraire[e]+"</option>"}$("#endTime").html(o),checkInputSearch(t,"19:00")})),$("#endTime").change((function(){checkInputSearch($("#startTime").val(),this.value)})),$("#inputFieldSearch").keyup((function(t){let o=$(this).val();""!==o?$.getJSON("https://apiv3.geoportail.lu/fulltextsearch?limit=2&layer=Commune&query="+o,(function(t){let e="";for(let o=0;o<t.features.length;o++){const i=t.features[o].properties.label;console.log(i),e+="<li>"+i+"</li>"}$.getJSON("https://apiv3.geoportail.lu/fulltextsearch?limit=5&layer=Adresse&query="+o,(function(t){console.log(t.features);for(let o=0;o<t.features.length;o++){const i=t.features[o].properties.label;console.log(i),e+="<li>"+i+"</li>"}$("#autoCompleteDivList").html(e),$("#autoCompleteDivList li").click((function(){const t=$(this).html();console.log(t),$("#inputFieldSearch").val(t),$(".searchIcon").click(),$("#autoCompleteDiv").hide()})),$("#autoCompleteDiv").show()}))})):$("#autoCompleteDiv").hide(),13==t.keyCode&&$(".searchIcon").click()})),$(".sliderDistance").on("change mousemove",(function(){$("#distanceValueDisplay").html(this.value)})),$(".resetDefault").click((function(){$("#inputFieldSearch").val(""),$("#checkBoxEmptied").prop("checked",!1),$(".sliderDistance").val("5"),$("#distanceValueDisplay").html("5"),$("#startTime").val("??:??").change(),$("#endTime").val("??:??").change()})),$("#checkBoxEmptied").click((function(){if($(this)[0].checked){let t=new Date,o=t.getHours(),e=t.getMinutes();e<30&&(e=30),e>30&&(e="00"),(o>19||o<7)&&(o=7,e=0);let i="";o<10?i="0"+o:i+=o,i+=":"+e,checkInputSearch(i,"19:00"),$("#startTime").val(i).change()}else checkInputSearch("07:30","19:00"),$("#startTime").val("??:??").change()}));let kmDistance="5";$(".sliderDistance").on("change",(function(){if(kmDistance!=this.value){let t="07:30",o="19:00",e=$("#startTime").val();if(null!==e){t=e;let i=$("#endTime").val();null!==i&&(o=i)}checkInputSearch(t,o,this.value),kmDistance=this.value}})),$(".showMapButton").click(handleShowMap);let checkListLocation=!0,firstRun=!0,count=0;function showLocationList(t,o,e,i,n,l){$.getJSON("/api/boxletter/"+t,(function(t){"pickUpTime"==n&&("asc"==l?t.sort(((t,o)=>t.pickUpTime>o.pickUpTime?1:o.pickUpTime>t.pickUpTime?-1:0)):t.sort(((t,o)=>t.pickUpTime<o.pickUpTime?1:o.pickUpTime<t.pickUpTime?-1:0))),"distance"==n&&("asc"==l?t.sort(((t,o)=>calcCrow(t.normalCoordinates.split(",")[1],t.normalCoordinates.split(",")[0],latitude,longitude).toFixed(2)>calcCrow(o.normalCoordinates.split(",")[1],o.normalCoordinates.split(",")[0],latitude,longitude).toFixed(2)?1:calcCrow(o.normalCoordinates.split(",")[1],o.normalCoordinates.split(",")[0],latitude,longitude).toFixed(2)>calcCrow(t.normalCoordinates.split(",")[1],t.normalCoordinates.split(",")[0],latitude,longitude).toFixed(2)?-1:0)):t.sort(((t,o)=>calcCrow(t.normalCoordinates.split(",")[1],t.normalCoordinates.split(",")[0],latitude,longitude).toFixed(2)<calcCrow(o.normalCoordinates.split(",")[1],o.normalCoordinates.split(",")[0],latitude,longitude).toFixed(2)?1:calcCrow(o.normalCoordinates.split(",")[1],o.normalCoordinates.split(",")[0],latitude,longitude).toFixed(2)<calcCrow(t.normalCoordinates.split(",")[1],t.normalCoordinates.split(",")[0],latitude,longitude).toFixed(2)?-1:0)));let c="";count=0;for(let n=0;n<t.length;n++)if(null!=o){let l=horraire.indexOf(o),a=horraire.length;void 0!==e&&(a=horraire.indexOf(e)+1);const s=t[n];for(let t=l;t<a;t++){let o='<span class="list_location_all" id="location_'+s.idBoxLetter+'">\n                        <div class="list_location_close directButtonDisplayOnMap" value="'+s.normalCoordinates+`">\n                        <table>\n                            <tr>\n                                <td colspan='2'>${lang.address}</td>\n                            </tr>\n                            <tr>\n                                <td colspan='2'>${s.street}</td>\n                            </tr>\n                            <tr>\n                                <td colspan='2'>L-${s.postal} ${s.city}</td>\n                            </tr>\n                            <tr>\n                                <td>${lang.pickUpTime}</td>\n                                <td>${lang.distance}</td>\n                            </tr>\n                            <tr>\n                                <td>${s.pickUpTime}</td>\n                                <td>${calcCrow(s.normalCoordinates.split(",")[1],s.normalCoordinates.split(",")[0],latitude,longitude).toFixed(2)} km</td>\n                            </tr>\n                        </table>\n                \n                        </div>\n                    </span>`;null==i?s.pickUpTime==horraire[t]&&(count++,c+=o):s.pickUpTime==horraire[t]&&parseFloat(calcCrow(s.normalCoordinates.split(",")[1],s.normalCoordinates.split(",")[0],latitude,longitude).toFixed(2))<=parseInt(i)&&(count++,c+=o)}}else{count++;const o=t[n];c+='<span class="list_location_all" id="location_'+o.idBoxLetter+'">\n                        <div class="list_location_close directButtonDisplayOnMap" value="'+o.normalCoordinates+`">\n                        <table>\n                            <tr>\n                                <td colspan='2'>${lang.address}</td>\n                            </tr>\n                            <tr>\n                                <td colspan='2'>${o.street}</td>\n                            </tr>\n                            <tr>\n                                <td colspan='2'>L-${o.postal} ${o.city}</td>\n                            </tr>\n                            <tr>\n                                <td>${lang.pickUpTime}</td>\n                                <td>${lang.distance}</td>\n                            </tr>\n                            <tr>\n                                <td>${o.pickUpTime}</td>\n                                <td>${calcCrow(o.normalCoordinates.split(",")[1],o.normalCoordinates.split(",")[0],latitude,longitude).toFixed(2)} km</td>\n                            </tr>\n                        </table>\n                \n                        </div>\n                    </span>`}$(".list_lo").html(c),$("#totalBoxLettersFound").html(count),$(".directButtonDisplayOnMap").click((function(){moveView(this.attributes.value.nodeValue),$(".switch-button-checkbox").click()})),$(".list_location_all").click((function(){$(".list_location_close").removeClass("activeAddress"),$("#"+this.id+" .list_location_close").addClass("activeAddress")}))}))}function success(t){$.getJSON("https://apiv3.geoportail.lu/geocode/reverse?lon="+t.coords.longitude+"&lat="+t.coords.latitude,(function(o){const e=o.results[0];let i=e.number+", "+e.street+" L-"+e.postal_code+" "+e.locality;$("#inputFieldSearch").val(i),displayPins(e.locality),showLocationList(e.locality),longitude=t.coords.longitude,latitude=t.coords.latitude,displayMyPosition(t.coords.longitude,t.coords.latitude)}))}function checkInputSearch(t,o,e){let i=$("#inputFieldSearch").val();""!==e?""!==i?$.getJSON("https://apiv3.geoportail.lu/geocode/search?queryString="+i,(function(i){const n=i.results[0].name;$("#inputFieldSearch").val(n),longitude=i.results[0].geomlonlat.coordinates[0],latitude=i.results[0].geomlonlat.coordinates[1],showLocationList(i.results[0].AddressDetails.locality,t,o,e),displayPins(i.results[0].AddressDetails.locality,t,o,e),displayMyPosition(longitude,latitude)})):(showLocationList("Luxembourg",t,o,e),displayPins("Luxembourg",t,o,e),displayMyPosition(longitude,latitude)):""!==i?$.getJSON("https://apiv3.geoportail.lu/geocode/search?queryString="+i,(function(e){const i=e.results[0].name;$("#inputFieldSearch").val(i),longitude=e.results[0].geomlonlat.coordinates[0],latitude=e.results[0].geomlonlat.coordinates[1],showLocationList(e.results[0].AddressDetails.locality,t,o),displayPins(e.results[0].AddressDetails.locality,t,o),displayMyPosition(longitude,latitude)})):(showLocationList("Luxembourg",t,o),displayPins("Luxembourg",t,o),displayMyPosition(longitude,latitude))}$(".showListTowns").click((function(){checkListLocation&&firstRun?($(this).css({"background-color":"#002641",color:"white"}),checkListLocation=!1,firstRun=!1,$(".list_location_all").hide(),$(".descriptionText").html(lang.filterbyTown),$.getJSON("/api/cities",(function(t){let o="<div class='filterTownDiv'><table>";o+="<tr><td></td><td>Select all:</td><td><input type='checkbox' id='checkBoxSelectAll'></td></tr>";for(let e=0;e<t.length;e++){const i=t[e];o+="<tr><td></td><td>"+i.city+"</td><td><input type='checkbox' class='townCheckBox' id='checkBoxIdCity_"+i.idCity+"' value='"+i.city+"'></td></tr>"}o+="</table></div>",$(".filterByTownContent").html(o),$("#checkBoxSelectAll").click((function(){this.checked?$(".townCheckBox").prop("checked",!0):$(".townCheckBox").prop("checked",!1);let t="";$(".townCheckBox:checkbox:checked").each((function(){t+=this.value+","})),""!=t?($("#checkBoxSelectAll")[0].checked&&(t=""),displayPins(t),showLocationList(t)):clearMap()})),$(".townCheckBox").click((function(){$(".townCheckBox:checkbox:checked").length>=t.length?$("#checkBoxSelectAll").prop("checked",!0):$("#checkBoxSelectAll").prop("checked",!1);let o="";$(".townCheckBox:checkbox:checked").each((function(){o+=this.value+","})),""!=o?($("#checkBoxSelectAll")[0].checked&&(o=""),displayPins(o),showLocationList(o)):clearMap()}))}))):checkListLocation?($(this).css({"background-color":"#002641",color:"white"}),checkListLocation=!1,$(".list_location_all").hide(),$(".filterByTownContent").show(),$(".descriptionText").html(lang.filterbyTown)):($(this).css({"background-color":"",color:"#002641"}),checkListLocation=!0,$(".list_location_all").show(),$(".filterByTownContent").hide(),$(".descriptionText").html('<span id="totalBoxLettersFound">'+count+"</span> "+lang.boxLettersFound))})),$(".pinSearchIconBar").click((function(){navigator.geolocation?navigator.geolocation.getCurrentPosition(success):alert("Geolocation is not supported by this browser.")})),$(".searchIcon").click((function(){checkInputSearch()}));
